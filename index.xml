<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>&lt;b&gt;Quyen Vu&lt;/b&gt;</title>
<link>https://qvv5013.github.io/index.html</link>
<atom:link href="https://qvv5013.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>A great sample blog</description>
<generator>quarto-1.2.280</generator>
<lastBuildDate>Sun, 11 Dec 2022 00:00:00 GMT</lastBuildDate>
<item>
  <title>Problems regarding ipywidgets has no attribute ‘version_info’</title>
  <dc:creator>Quyen Vu</dc:creator>
  <link>https://qvv5013.github.io/posts/python/Problems-regarding-ipywidgets.html</link>
  <description><![CDATA[ 




<p>With the recent update of <code>ipywidgets</code>, Pyemma, MDAnalysis and some other package encounter problems with <code>ipywidgets</code>.</p>
<p>The dirty solution is install version <code>ipywidgets&lt;8</code>. version 7.7 may help and wait till developers of <code>ipywidgets</code> fix it.</p>



 ]]></description>
  <category>Python</category>
  <guid>https://qvv5013.github.io/posts/python/Problems-regarding-ipywidgets.html</guid>
  <pubDate>Sun, 11 Dec 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Openmm Coarse-grained Simulations</title>
  <dc:creator>Quyen Vu</dc:creator>
  <link>https://qvv5013.github.io/posts/Create-env-for-openmm-cg-simulations/Openmm-coarse-grained-simulations.html</link>
  <description><![CDATA[ 




<section id="ares-supercomputer" class="level1">
<h1>Ares supercomputer</h1>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="co" style="color: #5E5E5E;">#!/bin/bash</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;">#SBATCH --partition plgrid</span></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;">#SBATCH --job-name cryosparc-master</span></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;">#SBATCH --nodes 1</span></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;">#SBATCH --ntasks-per-node 1</span></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;">#SBATCH --mem 15GB</span></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;">#SBATCH --time 72:00:00</span></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;">#SBATCH -C localfs</span></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;">#SBATCH -A plgrisa-cpu</span></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;">#SBATCH --dependency=singleton</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;">#SBATCH --output cryosparc-master-log-%J.txt</span></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;">#SBATCH --signal=B:2@240</span></span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="bu" style="color: null;">echo</span> <span class="st" style="color: #20794D;">"Job run"</span> <span class="op" style="color: #5E5E5E;">&gt;</span> test.txt</span></code></pre></div>
</section>
<section id="prepare-environment-for-simulations" class="level1">
<h1>Prepare environment for simulations</h1>
<section id="install-packages" class="level2">
<h2 class="anchored" data-anchor-id="install-packages">Install packages</h2>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;">conda</span> install <span class="at" style="color: #657422;">-c</span> openmm=7.7 parmed mdtraj</span></code></pre></div>
<p>Notes on cluster information:</p>
<pre><code>* local machine: (py310) openMM 7.7+ cudatoolkit 11.6
* Plgrid: (py310) openMM 7.7+ cudatoolkit 10.2
* ACI: (base) OpenMM 7.7+ cudatoolkit 11.7
* Ares: openMM 7.7 + cudatoolkit 11.6 ( GPU Tesla V100)</code></pre>
<section id="job-with-gpu" class="level3">
<h3 class="anchored" data-anchor-id="job-with-gpu">Job with GPU</h3>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="co" style="color: #5E5E5E;">#!/bin/bash</span></span>
<span id="cb4-2"><span class="co" style="color: #5E5E5E;">#SBATCH --job-name ares_gpu</span></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;">#SBATCH --nodes 1</span></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;">#SBATCH --partition plgrid-gpu-v100</span></span>
<span id="cb4-5"><span class="co" style="color: #5E5E5E;">#SBATCH --gres=gpu:1</span></span>
<span id="cb4-6"><span class="co" style="color: #5E5E5E;">#SBATCH --ntasks-per-node 1</span></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;">#SBATCH --mem 15GB</span></span>
<span id="cb4-8"><span class="co" style="color: #5E5E5E;">#SBATCH --time 48:00:00</span></span>
<span id="cb4-9"><span class="co" style="color: #5E5E5E;">#SBATCH -C localfs</span></span>
<span id="cb4-10"><span class="co" style="color: #5E5E5E;">#SBATCH -A plgrisa-gpu</span></span>
<span id="cb4-11"><span class="co" style="color: #5E5E5E;">#SBATCH --dependency=singleton</span></span>
<span id="cb4-12"><span class="co" style="color: #5E5E5E;">#SBATCH --output cryosparc-master-log-%J.txt</span></span>
<span id="cb4-13"><span class="co" style="color: #5E5E5E;">#SBATCH --signal=B:2@240</span></span>
<span id="cb4-14"></span>
<span id="cb4-15"><span class="co" style="color: #5E5E5E;">## prometheus</span></span>
<span id="cb4-16"><span class="co" style="color: #5E5E5E;">#source /net/people/plgqvuvan/anaconda3/etc/profile.d/conda.sh</span></span>
<span id="cb4-17"><span class="co" style="color: #5E5E5E;">## ares</span></span>
<span id="cb4-18"></span>
<span id="cb4-19"><span class="bu" style="color: null;">cd</span> <span class="va" style="color: #111111;">$SLURM_SUBMIT_DIR</span></span>
<span id="cb4-20"></span>
<span id="cb4-21"><span class="ex" style="color: null;">conda</span> init bash</span>
<span id="cb4-22"><span class="bu" style="color: null;">source</span> /net/people/plgrid/plgqvuvan/plggligroup/qvv5013/anaconda3/etc/profile.d/conda.sh</span>
<span id="cb4-23"><span class="ex" style="color: null;">conda</span> activate py310</span>
<span id="cb4-24"><span class="ex" style="color: null;">module</span> add cuda/11.6.0</span>
<span id="cb4-25"><span class="bu" style="color: null;">echo</span> <span class="st" style="color: #20794D;">"NVIDIA-DRIVER version:"</span><span class="kw" style="color: #003B4F;">`</span><span class="ex" style="color: null;">nvidia-smi</span><span class="kw" style="color: #003B4F;">`</span></span>
<span id="cb4-26"></span>
<span id="cb4-27"><span class="ex" style="color: null;">python</span> single_run_extend.py <span class="at" style="color: #657422;">-f</span> control.cntrl</span></code></pre></div>
</section>
</section>
<section id="interactive-mode-on-ares" class="level2">
<h2 class="anchored" data-anchor-id="interactive-mode-on-ares">interactive mode on ares:</h2>
<ul>
<li>using GPU: <code>srun -p plgrid-gpu-v100 --nodes=1 --ntasks=1 --mem=5GB --time=0-1 --pty bash</code></li>
<li>using CPU: <code>srun -p plgrid --nodes=1 --ntasks=1 --mem=5GB --time=0-1 --pty bash</code></li>
</ul>


</section>
</section>

 ]]></description>
  <category>HPC</category>
  <category>Slurm</category>
  <category>OpenMM</category>
  <guid>https://qvv5013.github.io/posts/Create-env-for-openmm-cg-simulations/Openmm-coarse-grained-simulations.html</guid>
  <pubDate>Fri, 09 Dec 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Counting number of line from file in linux</title>
  <dc:creator>Quyen Vu</dc:creator>
  <link>https://qvv5013.github.io/posts/linux-tips/count-line-in-file.html</link>
  <description><![CDATA[ 




<p>Sometime, after perform a long analysis of many simulations. We want to make sure if the analysis is done automatically, instead of looking into single file one-by-one, we can use <code>bash</code> script to do so.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="co" style="color: #5E5E5E;">#!/bin/bash</span></span>
<span id="cb1-2"><span class="cf" style="color: #003B4F;">for</span> i <span class="kw" style="color: #003B4F;">in</span> <span class="dt" style="color: #AD0000;">{</span><span class="dv" style="color: #AD0000;">1</span><span class="dt" style="color: #AD0000;">..</span><span class="dv" style="color: #AD0000;">100</span><span class="dt" style="color: #AD0000;">}</span></span>
<span id="cb1-3"><span class="cf" style="color: #003B4F;">do</span></span>
<span id="cb1-4">        <span class="co" style="color: #5E5E5E;">#echo "$i"</span></span>
<span id="cb1-5">        <span class="va" style="color: #111111;">nl</span><span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">$(</span><span class="fu" style="color: #4758AB;">wc</span> <span class="at" style="color: #657422;">-l</span> <span class="op" style="color: #5E5E5E;">&lt;</span> <span class="va" style="color: #111111;">$i</span>/G_traj_<span class="va" style="color: #111111;">${i}</span>.dat<span class="va" style="color: #111111;">)</span></span>
<span id="cb1-6">        <span class="cf" style="color: #003B4F;">if</span> <span class="bu" style="color: null;">[</span> <span class="va" style="color: #111111;">$nl</span> <span class="ot" style="color: #003B4F;">-eq</span> 400008 <span class="bu" style="color: null;">]</span><span class="kw" style="color: #003B4F;">;</span> <span class="cf" style="color: #003B4F;">then</span></span>
<span id="cb1-7">                <span class="bu" style="color: null;">echo</span> <span class="st" style="color: #20794D;">"traj </span><span class="va" style="color: #111111;">$i</span><span class="st" style="color: #20794D;"> :  </span><span class="va" style="color: #111111;">$nl</span><span class="st" style="color: #20794D;"> --- DONE"</span></span>
<span id="cb1-8">        <span class="cf" style="color: #003B4F;">else</span></span>
<span id="cb1-9">                <span class="bu" style="color: null;">echo</span> <span class="st" style="color: #20794D;">"traj </span><span class="va" style="color: #111111;">$i</span><span class="st" style="color: #20794D;"> :  </span><span class="va" style="color: #111111;">$nl</span><span class="st" style="color: #20794D;"> --- Has not been DONE"</span></span>
<span id="cb1-10">        <span class="cf" style="color: #003B4F;">fi</span></span>
<span id="cb1-11"></span>
<span id="cb1-12"><span class="cf" style="color: #003B4F;">done</span></span></code></pre></div>
<p>In this example, we loop through all simulations (1 to 100) and use command: <code>wc -l &lt; $i/G_traj_${i}.dat</code> to count the number of lines in file. we assign the output from this command to <code>nl</code> variable by packing previous command by <code>$(command)</code></p>



 ]]></description>
  <category>Linux</category>
  <guid>https://qvv5013.github.io/posts/linux-tips/count-line-in-file.html</guid>
  <pubDate>Fri, 09 Dec 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Running jobs on clusters</title>
  <dc:creator>Quyen Vu</dc:creator>
  <link>https://qvv5013.github.io/posts/Running-jobs-on-clusters/running-jobs-on-cluster.html</link>
  <description><![CDATA[ 




<section id="ares-supercomputer" class="level1">
<h1>Ares supercomputer</h1>
<section id="cpu-job-script" class="level4">
<h4 class="anchored" data-anchor-id="cpu-job-script">CPU job script</h4>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="co" style="color: #5E5E5E;">#!/bin/bash</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;">#SBATCH --partition plgrid</span></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;">#SBATCH --job-name cryosparc-master</span></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;">#SBATCH --nodes 1</span></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;">#SBATCH --ntasks-per-node 1</span></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;">#SBATCH --mem 15GB</span></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;">#SBATCH --time 72:00:00</span></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;">#SBATCH -C localfs</span></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;">#SBATCH -A plgrisa-cpu</span></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;">#SBATCH --dependency=singleton</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;">#SBATCH --output cryosparc-master-log-%J.txt</span></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;">#SBATCH --signal=B:2@240</span></span>
<span id="cb1-13"></span>
<span id="cb1-14"><span class="bu" style="color: null;">echo</span> <span class="st" style="color: #20794D;">"Job run"</span> <span class="op" style="color: #5E5E5E;">&gt;</span> test.txt</span></code></pre></div>
</section>
<section id="gpu-job-script" class="level4">
<h4 class="anchored" data-anchor-id="gpu-job-script">GPU Job script</h4>
</section>
</section>
<section id="prometheus-supercomputer" class="level1">
<h1>Prometheus supercomputer</h1>
<section id="cpu-job" class="level4">
<h4 class="anchored" data-anchor-id="cpu-job">CPU job</h4>
</section>
<section id="gpu-job-scripts" class="level4">
<h4 class="anchored" data-anchor-id="gpu-job-scripts">GPU job scripts</h4>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="co" style="color: #5E5E5E;">#!/bin/bash -l</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;">#SBATCH -J pGcat_SETINDEX</span></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;">#SBATCH -N 1</span></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;">#SBATCH --ntasks-per-node=1</span></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;">#SBATCH --mem-per-cpu=5GB</span></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;">#SBATCH --time=72:00:00</span></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;">#SBATCH -A plgribo3gpu</span></span>
<span id="cb2-8"><span class="co" style="color: #5E5E5E;">#SBATCH --gres=gpu</span></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;">#SBATCH -p plgrid-gpu</span></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;">#SBATCH --output=output.out</span></span>
<span id="cb2-11"><span class="co" style="color: #5E5E5E;">#SBATCH --error=error.err</span></span>
<span id="cb2-12"><span class="bu" style="color: null;">cd</span> <span class="va" style="color: #111111;">$SLURM_SUBMIT_DIR</span></span>
<span id="cb2-13"><span class="ex" style="color: null;">srun</span> /bin/hostname</span>
<span id="cb2-14"></span>
<span id="cb2-15"><span class="fu" style="color: #4758AB;">perl</span> calc_entanglement_number.pl <span class="at" style="color: #657422;">-i</span> ../../setup/3cla_m_clean_ca.cor <span class="at" style="color: #657422;">-t</span> ../../SETINDEX/cat3_SETINDEX_prod.dcd <span class="at" style="color: #657422;">-o</span> ./</span></code></pre></div>


</section>
</section>

 ]]></description>
  <category>HPC</category>
  <category>Slurm</category>
  <guid>https://qvv5013.github.io/posts/Running-jobs-on-clusters/running-jobs-on-cluster.html</guid>
  <pubDate>Sat, 26 Nov 2022 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Amino acid table</title>
  <dc:creator>Quyen Vu</dc:creator>
  <link>https://qvv5013.github.io/posts/Amino-acid-table/index.html</link>
  <description><![CDATA[ 




<section id="amino-acids-table-with-their-properties" class="level1">
<h1>Amino acids table with their properties</h1>
<p><img src="https://qvv5013.github.io/posts/Amino-acid-table/ProteinogenicAminoAcids.svg.png" class="img-fluid" alt="List of 20 amino acids and classification according to side-chain"></p>


</section>

 ]]></description>
  <category>Protein</category>
  <guid>https://qvv5013.github.io/posts/Amino-acid-table/index.html</guid>
  <pubDate>Fri, 25 Nov 2022 00:00:00 GMT</pubDate>
  <media:content url="https://qvv5013.github.io/posts/Amino-acid-table/ProteinogenicAminoAcids.svg.png" medium="image" type="image/png" height="115" width="144"/>
</item>
</channel>
</rss>
